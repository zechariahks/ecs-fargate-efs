Transform: AWS::CodeDeployBlueGreen
Parameters:
  VPC:
    Type: AWS::EC2::VPC::Id
    Description: VPC Id
  Subnet1:
    Type: AWS::EC2::Subnet::Id
    Description: SubnetId1
  Subnet2:
    Type: AWS::EC2::Subnet::Id
    Description: SubnetId2
Resources:
  FargateCluster7CCD5F93:
    Type: AWS::ECS::Cluster
    Metadata:
      aws:cdk:path: EcsFargateEfsStack/FargateCluster/Resource
  efssecurityA81D59F7:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: EcsFargateEfsStack/efs-security
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: VPC
    Metadata:
      aws:cdk:path: EcsFargateEfsStack/efs-security/Resource
  efssecurityfromEcsFargateEfsStackserviceSG8DA6106320490369AE29:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from EcsFargateEfsStackserviceSG8DA61063:2049
      FromPort: 2049
      GroupId:
        Fn::GetAtt:
          - efssecurityA81D59F7
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - serviceSGDB145FE1
          - GroupId
      ToPort: 2049
    Metadata:
      aws:cdk:path: EcsFargateEfsStack/efs-security/from EcsFargateEfsStackserviceSG8DA61063:2049
  serviceSGDB145FE1:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: EcsFargateEfsStack/serviceSG
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: from 0.0.0.0/0:80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
        - CidrIp: 0.0.0.0/0
          Description: from 0.0.0.0/0:8080
          FromPort: 8080
          IpProtocol: tcp
          ToPort: 8080
      VpcId:
        Ref: VPC
    Metadata:
      aws:cdk:path: EcsFargateEfsStack/serviceSG/Resource
  efs6C17982A:
    Type: AWS::EFS::FileSystem
    Properties:
      BackupPolicy:
        Status: ENABLED
      Encrypted: true
      FileSystemTags:
        - Key: Name
          Value: EcsFargateEfsStack/efs
      LifecyclePolicies:
        - TransitionToIA: AFTER_60_DAYS
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: EcsFargateEfsStack/efs/Resource
  efsEfsMountTarget1CAFBA94A:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId:
        Ref: efs6C17982A
      SecurityGroups:
        - Fn::GetAtt:
            - efssecurityA81D59F7
            - GroupId
      SubnetId:
        Ref: Subnet1
    Metadata:
      aws:cdk:path: EcsFargateEfsStack/efs/EfsMountTarget1
  efsEfsMountTarget25C852BF4:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId:
        Ref: efs6C17982A
      SecurityGroups:
        - Fn::GetAtt:
            - efssecurityA81D59F7
            - GroupId
      SubnetId:
        Ref: Subnet2
    Metadata:
      aws:cdk:path: EcsFargateEfsStack/efs/EfsMountTarget2
  EcsEfsTaskExecutionRole8D18B05A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: EcsFargateEfsStack/EcsEfsTaskExecutionRole/Resource
  codedeploybleugreenhookroleD8BCA5FB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AWSCodeDeployFullAccess
      RoleName: codedeploybleugreenhookrole
    Metadata:
      aws:cdk:path: EcsFargateEfsStack/codedeploybleugreenhookrole/Resource
  BlueTaskDefinitionTaskRole2A0CE9CA:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: EcsFargateEfsStack/BlueTaskDefinition/TaskRole/Resource
  BlueTaskDefinitionD77B7F7A:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Essential: true
          Image: nginxdemos/hello:0.2
          MountPoints:
            - ContainerPath: /var/lib/efspath
              ReadOnly: false
              SourceVolume: myefs
          Name: ecs-efs-containerdef
          PortMappings:
            - ContainerPort: 80
              HostPort: 80
              Protocol: tcp
      Cpu: "256"
      ExecutionRoleArn:
        Fn::GetAtt:
          - EcsEfsTaskExecutionRole8D18B05A
          - Arn
      Family: ecs-efs
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - BlueTaskDefinitionTaskRole2A0CE9CA
          - Arn
      Volumes:
        - Name: myefs
          EFSVolumeConfiguration:
            FilesystemId:
              Ref: efs6C17982A
            TransitEncryption: ENABLED
    Metadata:
      aws:cdk:path: EcsFargateEfsStack/BlueTaskDefinition/Resource
  LoadBalancerBE9EEC3A:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: "false"
      Scheme: internet-facing
      SecurityGroups:
        - Fn::GetAtt:
            - serviceSGDB145FE1
            - GroupId
      Subnets:
        - Ref: Subnet1
        - Ref: Subnet2
      Type: application
    Metadata:
      aws:cdk:path: EcsFargateEfsStack/LoadBalancer/Resource
  LoadBalancerProdListenerC5803EFD:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: ALBTargetGroupBlue8419EC11
          Type: forward
      LoadBalancerArn:
        Ref: LoadBalancerBE9EEC3A
      Port: 80
      Protocol: HTTP
    Metadata:
      aws:cdk:path: EcsFargateEfsStack/LoadBalancer/ProdListener/Resource
  LoadBalancerTestListenerB9671EB8:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: ALBTargetGroupGreenACEF9CF6
          Type: forward
      LoadBalancerArn:
        Ref: LoadBalancerBE9EEC3A
      Port: 8080
      Protocol: HTTP
    Metadata:
      aws:cdk:path: EcsFargateEfsStack/LoadBalancer/TestListener/Resource
  ALBTargetGroupBlue8419EC11:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      TargetType: ip
      VpcId:
        Ref: VPC
    Metadata:
      aws:cdk:path: EcsFargateEfsStack/ALBTargetGroupBlue/Resource
  ALBTargetGroupGreenACEF9CF6:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      TargetType: ip
      VpcId:
        Ref: VPC
    Metadata:
      aws:cdk:path: EcsFargateEfsStack/ALBTargetGroupGreen/Resource
  ecsefsfargate:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: FargateCluster7CCD5F93
      DeploymentController:
        Type: EXTERNAL
      DesiredCount: 2
    Metadata:
      aws:cdk:path: EcsFargateEfsStack/ecsefsfargate
  BlueTaskSet:
    Type: AWS::ECS::TaskSet
    Properties:
      Cluster:
        Ref: FargateCluster7CCD5F93
      Service:
        Fn::GetAtt:
          - ecsefsfargate
          - Name
      TaskDefinition:
        Ref: BlueTaskDefinitionD77B7F7A
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: ecs-efs-containerdef
          ContainerPort: 80
          TargetGroupArn:
            Ref: ALBTargetGroupBlue8419EC11
      NetworkConfiguration:
        AwsVpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - Fn::GetAtt:
                - serviceSGDB145FE1
                - GroupId
          Subnets:
            - Ref: Subnet1
            - Ref: Subnet2
      PlatformVersion: 1.4.0
      Scale:
        Unit: PERCENT
        Value: 100
    Metadata:
      aws:cdk:path: EcsFargateEfsStack/BlueTaskSet
  PrimaryTaskSet:
    Type: AWS::ECS::PrimaryTaskSet
    Properties:
      Cluster:
        Ref: FargateCluster7CCD5F93
      Service:
        Fn::GetAtt:
          - ecsefsfargate
          - Name
      TaskSetId:
        Fn::GetAtt:
          - BlueTaskSet
          - Id
    Metadata:
      aws:cdk:path: EcsFargateEfsStack/PrimaryTaskSet
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=1.73.0,@aws-cdk/assets=1.73.0,@aws-cdk/aws-applicationautoscaling=1.73.0,@aws-cdk/aws-autoscaling=1.73.0,@aws-cdk/aws-autoscaling-common=1.73.0,@aws-cdk/aws-autoscaling-hooktargets=1.73.0,@aws-cdk/aws-cloudwatch=1.73.0,@aws-cdk/aws-codeguruprofiler=1.73.0,@aws-cdk/aws-ec2=1.73.0,@aws-cdk/aws-ecr=1.73.0,@aws-cdk/aws-ecr-assets=1.73.0,@aws-cdk/aws-ecs=1.73.0,@aws-cdk/aws-efs=1.73.0,@aws-cdk/aws-elasticloadbalancingv2=1.73.0,@aws-cdk/aws-events=1.73.0,@aws-cdk/aws-iam=1.73.0,@aws-cdk/aws-kms=1.73.0,@aws-cdk/aws-lambda=1.73.0,@aws-cdk/aws-logs=1.73.0,@aws-cdk/aws-s3=1.73.0,@aws-cdk/aws-s3-assets=1.73.0,@aws-cdk/aws-servicediscovery=1.73.0,@aws-cdk/aws-sns=1.73.0,@aws-cdk/aws-sns-subscriptions=1.73.0,@aws-cdk/aws-sqs=1.73.0,@aws-cdk/aws-ssm=1.73.0,@aws-cdk/cloud-assembly-schema=1.73.0,@aws-cdk/core=1.73.0,@aws-cdk/custom-resources=1.73.0,@aws-cdk/cx-api=1.73.0,@aws-cdk/region-info=1.73.0,jsii-runtime=node.js/v14.15.0
    Metadata:
      aws:cdk:path: EcsFargateEfsStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Hooks:
  CodeDeployBlueGreenHook:
    Type: AWS::CodeDeploy::BlueGreen
    Properties:
      ServiceRole: codedeploybleugreenhookrole
      Applications:
        - Target:
            Type: AWS::ECS::Service
            LogicalID: ecsefsfargate
          ECSAttributes:
            TaskDefinitions:
              - BlueTaskDefinitionD77B7F7A
              - GreeTaskDefinition
            TaskSets:
              - BlueTaskSet
              - GreenTaskset
            TrafficRouting:
              ProdTrafficRoute:
                Type: AWS::ElasticLoadBalancingV2::Listener
                LogicalID: LoadBalancerProdListenerC5803EFD
              TestTrafficRoute:
                Type: AWS::ElasticLoadBalancingV2::Listener
                LogicalID: LoadBalancerTestListenerB9671EB8
              TargetGroups:
                - ALBTargetGroupBlue8419EC11
                - ALBTargetGroupGreenACEF9CF6
      TrafficRoutingConfig:
        Type: AllAtOnce
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

